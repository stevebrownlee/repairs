{"version":3,"sources":["components/customers/CustomerList.js","components/employees/Employee.js","components/employees/EmployeeForm.js","components/employees/EmployeeList.js","components/serviceTickets/Ticket.js","components/serviceTickets/TicketForm.js","components/serviceTickets/TicketList.js","components/ApplicationViews.js","components/nav/NavBar.js","components/auth/Login.js","components/auth/Register.js","components/Repairs.js","reportWebVitals.js","index.js"],"names":["CustomerList","useState","customers","setCustomers","totalCustomerMessage","updateMessage","useEffect","console","log","fetch","then","res","json","customerArray","length","slice","map","customerObject","name","id","Employee","employee","set","employeeId","useParams","className","specialty","EmployeeForm","change","history","useHistory","htmlFor","onChange","evt","copy","target","value","required","autoFocus","type","placeholder","onClick","preventDefault","fetchOption","method","headers","body","JSON","stringify","push","EmployeeList","employees","changeEmployee","specialties","setSpecial","employeesFromAPI","justSpecialities","emp","join","to","Ticket","ticket","syncEmployees","ticketId","fetchTicket","description","customer","updatedTicket","customerId","parseInt","emergency","dateCompleted","Date","toLocaleDateString","e","TicketForm","updateTicket","checked","newTicket","localStorage","getItem","TicketList","tickets","updateTickets","active","setActive","data","activeTicketCount","filter","t","ApplicationViews","exact","path","NavBar","removeItem","Login","email","existDialog","useRef","ref","current","close","onSubmit","user","exists","setItem","showModal","Register","props","setCustomer","conflictDialog","updateCustomer","style","textAlign","userExists","createdUser","hasOwnProperty","Repairs","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93cdfa22.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nexport const CustomerList = () => {\n    const [customers, setCustomers] = useState([])\n    const [totalCustomerMessage, updateMessage] = useState(\"\")\n\n    useEffect(\n        () => {\n            console.log(\"Initial useEffect\")\n            fetch(\"http://localhost:8088/customers\")\n                .then(res => res.json())\n                .then((customerArray) => {\n                    setCustomers(customerArray)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            console.log(\"Customers state changed\", customers)\n            if (customers.length === 1) {\n                updateMessage(\"You have 1 customer\")\n            }\n            else {\n                updateMessage(`You have ${customers.length} customers`)\n            }\n        },\n        [customers]\n    )\n\n    return (\n        <>\n            <div>{totalCustomerMessage}</div>\n            {\n                customers.slice(0, 5).map(\n                    (customerObject) => {\n                        return <p key={`customer--${customerObject.id}`}>{customerObject.name}</p>\n                    }\n                )\n            }\n        </>\n    )\n}","import React, { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nexport const Employee = () => {\n    const [employee, set] = useState({})  // State variable for current employee object\n    const { employeeId } = useParams()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/employees/${employeeId}`)\n            .then(res => res.json())\n            .then(set)\n        },\n        [ employeeId ]  // Above function runs when the value of employeeId change\n    )\n\n    return (\n        <>\n            <section className=\"employee\">\n                <h3 className=\"employee__name\">{employee.name}</h3>\n                <div className=\"employee__specialty\">Specialty is {employee.specialty}</div>\n            </section>\n        </>\n    )\n}\n","import React, {useState} from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nexport const EmployeeForm = () => {\n\n    const [employee, change] = useState({\n        name: \"\",\n        specialty: \"\"\n    })\n    const history = useHistory()\n\n    const hireEmployee = (evt) => {\n        evt.preventDefault()\n\n        const fetchOption = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: employee.name,\n                specialty: employee.specialty\n            })\n        }\n\n        return fetch(\"http://localhost:8088/employees\", fetchOption)\n            .then(() => {\n                history.push(\"/employees\")\n            })\n    }\n\n    return (\n        <form>\n            <h2>New Employee</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name:</label>\n                    <input\n                        onChange={\n                            (evt) => {\n                                const copy = {...employee}\n                                copy.name = evt.target.value\n                                change(copy)\n                            }\n                        }\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Full name\"\n                         />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"specialty\">Specialty:</label>\n                    <input\n                        onChange={\n                            (evt) => {\n                                const copy = {...employee}\n                                copy.specialty = evt.target.value\n                                change(copy)\n                            }\n                        }\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Technical specialty\"\n                         />\n                </div>\n            </fieldset>\n            <button onClick={hireEmployee} className=\"btn btn-primary\">\n                Hire New Employee\n            </button>\n        </form>\n    )\n}","import React, { useEffect, useState } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport const EmployeeList = () => {\n    const [employees, changeEmployee] = useState([])\n    const [specialties, setSpecial] = useState(\"\")\n    const history = useHistory()\n\n    useEffect(\n        () => {\n            fetch(\"http://localhost:8088/employees\")\n                .then(res => res.json())\n                .then((employeesFromAPI) => {\n                    changeEmployee(employeesFromAPI)\n                })\n        },\n        []\n    )\n\n    useEffect(() => {\n        const justSpecialities = employees.map(emp => emp.specialty)\n        setSpecial(justSpecialities.join(\", \"))\n    }, [employees])\n\n\n    return (\n        <>\n            <div>\n                <button onClick={() => history.push(\"/employees/create\")}>Hire Employee</button>\n            </div>\n\n            <div>\n                Specialties: { specialties }\n            </div>\n            {\n                employees.map(\n                    (employee) => {\n                        return <Link key={`employee--${employee.id}`} to={`employees/${employee.id}`}>\n                            <p >{employee.name}</p>\n                        </Link>\n                    }\n                )\n            }\n        </>\n    )\n}","import React, { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nexport const Ticket = () => {\n    const [ticket, set] = useState({})  // State variable for current ticket object\n    const [employees, syncEmployees] = useState([])  // State variable for array of employees\n    const { ticketId } = useParams()  // Variable storing the route parameter\n\n    // Function to fetch a single ticket, with customer and employee embedded\n    const fetchTicket = () => {\n        return fetch(`http://localhost:8088/serviceTickets/${ticketId}?_expand=customer&_expand=employee`)\n            .then(res => res.json())\n            .then(set)\n    }\n\n    // Invoke fetchTicket() when the parameter value changes\n    useEffect(\n        () => {\n            fetchTicket()\n        },\n        [ ticketId ]  // Above function runs when the value of ticketId change\n    )\n\n    // Fetch all employees\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/employees`)\n                .then(res => res.json())\n                .then(syncEmployees)\n        },\n        []  // Empty dependency array only reacts to JSX initial rendering\n    )\n\n    // Function to invoke when an employee is chosen from <select> element\n    const updateTicket = (evt) => {\n\n        // Construct a new object to replace the existing one in the API\n        const updatedTicket = {\n            customerId: ticket.customerId,\n            employeeId: parseInt(evt.target.value),\n            description: ticket.description,\n            emergency: ticket.emergency,\n            dateCompleted: new Date().toLocaleDateString(\"en-US\")\n        }\n\n        // Perform the PUT HTTP request to replace the resource\n        fetch(`http://localhost:8088/serviceTickets/${ticketId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(updatedTicket)\n        })\n            .then(() => {\n                fetchTicket()\n            })\n    }\n\n    return (\n        <>\n            <section className=\"ticket\">\n                <h3 className=\"ticket__description\">{ticket.description}</h3>\n                <div className=\"ticket__customer\">Submitted by {ticket.customer?.name}</div>\n                <div className=\"ticket__employee\">Assigned to\n                    <select\n                        value={ ticket.employeeId }\n                        onChange={ updateTicket }>\n                        {\n                            employees.map(e => <option key={`employee--${e.id}`} value={e.id}>{e.name}</option>)\n                        }\n                    </select>\n                </div>\n            </section>\n        </>\n    )\n}\n","import React, {useState} from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nexport const TicketForm = () => {\n\n    const [ticket, updateTicket] = useState({\n        description: \"\",\n        emergency: false\n    })\n    const history = useHistory()\n\n    const submitTicket = (evt) => {\n        evt.preventDefault()\n\n        const newTicket = {\n            description: ticket.description,\n            emergency: ticket.emergency,\n            customerId: parseInt(localStorage.getItem(\"honey_customer\")),\n            employeeId: 1,\n            dateCompleted: \"\"\n        }\n\n        const fetchOption = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newTicket)\n        }\n\n        return fetch(\"http://localhost:8088/serviceTickets\", fetchOption)\n            .then(() => {\n                history.push(\"/tickets\")\n            })\n    }\n\n    return (\n        <form className=\"ticketForm\">\n            <h2 className=\"ticketForm__title\">New Service Ticket</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description:</label>\n                    <input\n                        onChange={\n                            (evt) => {\n                                const copy = {...ticket}\n                                copy.description = evt.target.value\n                                updateTicket(copy)\n                            }\n                        }\n                        required autoFocus\n                        type=\"text\" id=\"description\"\n                        className=\"form-control\"\n                        placeholder=\"Brief description of problem\"\n                         />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Emergency:</label>\n                    <input\n                        onChange={\n                            (evt) => {\n                                const copy = {...ticket}\n                                copy.emergency = evt.target.checked\n                                updateTicket(copy)\n                            }\n                        }\n                        type=\"checkbox\" />\n                </div>\n            </fieldset>\n            <button onClick={submitTicket} className=\"btn btn-primary\">\n                Submit Ticket\n            </button>\n        </form>\n    )\n}","import React, { useEffect, useState } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport \"./Tickets.css\"\n\nexport const TicketList = () => {\n    const [tickets, updateTickets] = useState([])\n    const [active, setActive] = useState(\"\")\n    const history = useHistory()\n\n    useEffect(\n        () => {\n            fetch(\"http://localhost:8088/serviceTickets?_expand=employee&_expand=customer\")\n                .then(res => res.json())\n                .then((data) => {\n                    updateTickets(data)\n                })\n        },\n        []\n    )\n\n    useEffect(() => {\n        const activeTicketCount = tickets.filter(t => t.dateCompleted === \"\").length\n        setActive(`There are ${activeTicketCount} open tickets`)\n    }, [tickets])\n\n    return (\n        <>\n            <div>\n                <button onClick={() => history.push(\"/tickets/create\")}>Create Ticket</button>\n            </div>\n            { active }\n            {\n                tickets.map(\n                    (ticket) => {\n                        return <div key={`ticket--${ticket.id}`}>\n                            <p className={`ticket ${ticket.emergency ? 'emergency' : ''}`}>\n                                {ticket.emergency ? \"🚑\" : \"\"} <Link to={`/tickets/${ticket.id}`}>{ticket.description}</Link> submitted by {ticket.customer.name} and worked on by {ticket.employee.name}\n                            </p>\n                        </div>\n                    }\n                )\n            }\n\n        </>\n    )\n}","import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { CustomerList } from \"./customers/CustomerList\";\nimport { Employee } from \"./employees/Employee\";\nimport { EmployeeForm } from \"./employees/EmployeeForm\";\nimport { EmployeeList } from \"./employees/EmployeeList\";\nimport { Ticket } from \"./serviceTickets/Ticket\";\nimport { TicketForm } from \"./serviceTickets/TicketForm\";\nimport { TicketList } from \"./serviceTickets/TicketList\";\n\nexport const ApplicationViews = () => {\n    return (\n        <>\n            <Route exact path=\"/customers\">\n                <CustomerList />\n            </Route>\n\n            <Route exact path=\"/tickets\">\n                <TicketList />\n            </Route>\n\n            <Route exact path=\"/tickets/:ticketId(\\d+)\">\n                <Ticket />\n            </Route>\n\n            <Route path=\"/tickets/create\">\n                <TicketForm />\n            </Route>\n\n            <Route exact path=\"/employees\">\n                <EmployeeList />\n            </Route>\n\n            <Route exact path=\"/employees/:employeeId(\\d+)\">\n                <Employee />\n            </Route>\n\n            <Route path=\"/employees/create\">\n                <EmployeeForm />\n            </Route>\n\n        </>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./NavBar.css\"\n\nexport const NavBar = () => {\n    return (\n        <ul className=\"navbar\">\n            <li className=\"navbar__item active\">\n                <Link className=\"navbar__link\" to=\"/employees\">Employees</Link>\n            </li>\n            <li className=\"navbar__item\">\n                <Link className=\"navbar__link\" to=\"/customers\">Customers</Link>\n            </li>\n            <li className=\"navbar__item\">\n                <Link className=\"navbar__link\" to=\"/tickets\">Service Tickets</Link>\n            </li>\n            <li className=\"navbar__item\">\n                <Link className=\"navbar__link\" to=\"#\"\n                    onClick={\n                        () => {\n                            localStorage.removeItem(\"honey_customer\")\n                        }\n                    }>\n                    Logout\n                </Link>\n            </li>\n        </ul>\n    )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Login = () => {\n    const [email, set] = useState(\"\")\n    const existDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/customers?email=${email}`)\n            .then(res => res.json())\n            .then(user => user.length ? user[0] : false)\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"honey_customer\", exists.id)\n                    history.push(\"/\")\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <main className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section>\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h1>Honey Rae's Repairs</h1>\n                    <h2>Please sign in</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input type=\"email\"\n                            onChange={evt => set(evt.target.value)}\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\">\n                            Sign in\n                        </button>\n                    </fieldset>\n                </form>\n            </section>\n            <section className=\"link--register\">\n                <Link to=\"/register\">Not a member yet?</Link>\n            </section>\n        </main>\n    )\n}\n\n","import React, { useRef, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const [customer, setCustomer] = useState({})\n    const conflictDialog = useRef()\n\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/customers?email=${customer.email}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n    const handleRegister = (e) => {\n        e.preventDefault()\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    fetch(\"http://localhost:8088/customers\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(customer)\n                    })\n                        .then(res => res.json())\n                        .then(createdUser => {\n                            if (createdUser.hasOwnProperty(\"id\")) {\n                                localStorage.setItem(\"honey_customer\", createdUser.id)\n                                history.push(\"/\")\n                            }\n                        })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n    }\n\n    const updateCustomer = (evt) => {\n        const copy = {...customer}\n        copy[evt.target.id] = evt.target.value\n        setCustomer(copy)\n    }\n\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Honey Rae's Repairs</h1>\n                <fieldset>\n                    <label htmlFor=\"name\"> Full Name </label>\n                    <input onChange={updateCustomer}\n                           type=\"text\" id=\"name\" className=\"form-control\"\n                           placeholder=\"Enter your name\" required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"address\"> Address </label>\n                    <input onChange={updateCustomer} type=\"text\" id=\"address\" className=\"form-control\" placeholder=\"Street address\" required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"email\"> Email address </label>\n                    <input onChange={updateCustomer} type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\"> Register </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}\n\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { ApplicationViews } from \"./ApplicationViews\";\nimport { NavBar } from \"./nav/NavBar\";\nimport { Login } from \"./auth/Login\";\nimport { Register } from \"./auth/Register\";\nimport \"./Repairs.css\";\n\nexport const Repairs = () => (\n  <>\n    <Route\n      render={() => {\n        if (localStorage.getItem(\"honey_customer\")) {\n          return (\n            <>\n              <NavBar />\n              <ApplicationViews />\n            </>\n          );\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n\n    <Route path=\"/login\">\n      <Login />\n    </Route>\n    <Route path=\"/register\">\n      <Register />\n    </Route>\n  </>\n);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Repairs } from \"./components/Repairs\";\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Repairs />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}